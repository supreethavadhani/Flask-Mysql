DBMS CODE
-------------------------------------------------------------------------------------------------------------
//creating a user table
CREATE TABLE `BucketList`.`tbl_user` (
      `user_id` BIGINT not NULL AUTO_INCREMENT,
       `user_name` VARCHAR(256) NULL,
       `user_username` VARCHAR(256) NULL,
       `user_password` VARCHAR(256) NULL,
      PRIMARY KEY (`user_id`));

-----------------------------------------------------------------------------------------------------------------
//adding new user
    DELIMITER $$
     CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_createUser`(
              IN p_name VARCHAR(256),
              IN p_username VARCHAR(256),
               IN p_password VARCHAR(256)
           )
           BEGIN
               if ( select exists (select 1 from tbl_user where user_username = p_username) ) THEN

                   select 'Username Exists !!';

               ELSE

                   insert into tbl_user
                   (
                       user_name,
                       user_username,
                       user_password
                   )
                   values
                   (
                       p_name,
                       p_username,
                       p_password
                   );

               END IF;
           END$$
  DELIMITER ;

---------------------------------------------------------------------------------------------------------------
//Delete user(access given only to admin)
DELIMITER $$
 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_DelUser`(
 IN P_userID)

 BEGIN
     if ( select exists (select 1 from tbl_user where user_id ! = P_userID) ) THEN

         select 'User does not Exists !!';
    else
          delete
          from tbl_user
          where user_id = P_userID
  END IF;
END$$
DELIMITER ;
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
//validating the login
  DELIMITER $$
   CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_validateLogin`(
     IN p_username VARCHAR(256)
       )
       BEGIN
           select * from tbl_user where user_username = p_username;
       END$$
  DELIMITER;
--------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
//sector table creation
  CREATE TABLE `BucketList`.`sector` (
        `Sector_id` BIGINT not NULL,
         `Sector_name` VARCHAR(256) NULL,
         `Sector_city` VARCHAR(256) NULL,
         `Sector_state` VARCHAR(256) NULL,
         `Sector_Rain` BIGINT not NULL,
        PRIMARY KEY (Sector_id)
        );
-------------------------------------------------------------------------------------------------------------
//adding sector
      DELIMITER $$
      USE `BucketList`$$
         CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_createSector`(
                  IN p_number BIGINT not NULL,
                  IN p_name VARCHAR(256),
                  IN p_city VARCHAR(256),
                  IN p_state VARCHAR(256),
                  IN p_rain BIGINT
               )
               BEGIN


                       insert into sector
                       (
                           `Sector_id`,
                           `Sector_name`,
                           `Sector_city`,
                           `Sector_state`,
                           `Sector_Rain`
                       )
                       values
                       (
                           p_number,
                           p_name,
                           p_city,
                           p_state,
                           p_rain
                       );
               END$$
        DELIMITER ;

--------------------------------------------------------------------------------------------------------------


//View Sector
  DELIMITER $$
  USE `BucketList`$$
  CREATE PROCEDURE `sp_viewSector` ()
  BEGIN
      select * from sector;
  END$$

  DELIMITER ;
------------------------------------------------------------------------------------------------------------------
//ABOVE AVG RAINFALL
DELIMITER $$
USE `BucketList`$$
CREATE PROCEDURE `sp_AAR` ()
BEGIN
select Sector_id,Sector_name,Sector_Rain
from sector
where Sector_Rain >
(select avg(Sector_Rain)
from sector);
END$$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------------
DELIMITER $$
USE `BucketList`$$
CREATE PROCEDURE `sp_BAR` ()
BEGIN
select Sector_id,Sector_name,Sector_Rain
from sector
where Sector_Rain <
(select avg(Sector_Rain)
from sector);
END$$

DELIMITER ;

-----------------------------------------------------------------------------------------------------------
// Delete Sector
DELIMITER $$
 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_DelSector`(
 IN P_Sector_ID)

 BEGIN
     if ( select exists (select 1 from Sector where Sector_id ! = P_Sector_ID) ) THEN

         select 'Sector does not Exists !!';
    else
          delete
          from Sector
          where Sector_id = P_Sector_ID
  END IF;
END$$
DELIMITER ;
---------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
//create farm table
CREATE TABLE `BucketList`.`Farm` (
      `Sector_id` BIGINT not NULL,
       `farm_id` BIGINT not NULL,
       `last_produce` VARCHAR(256) NULL,
       `next_crop` VARCHAR(256) NULL,
       `supplements` VARCHAR(256) NULL,
       `water_avail` BIGINT not NULL,

      PRIMARY KEY (farm_id),
      FOREIGN KEY(Sector_id) references `BucketList`.`sector`(Sector_id)
      );
-------------------------------------------------------------------------------------------------------------
//adding farms
DELIMITER $$
USE `BucketList`$$
   CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_createFarm`(
    IN  p_Sector_id BIGINT ,
    IN  p_farm_id BIGINT,
    IN  p_last_produce VARCHAR(256),
    IN  p_next_crop VARCHAR(256),
    IN  p_supplements VARCHAR(256),
    IN  p_water_avail BIGINT
         )
           BEGIN
           if ( select exists (select 1 from Farm where farm_id = p_farm_id) ) THEN

               select 'farm Exists !!';
           ELSE

                 insert into Farm
                 (
                  `Sector_id`,
                  `farm_id`,
                  `last_produce`,
                  `next_crop`,
                  `supplements`,
                  `water_avail`
                 )
                 values
                 (
                 `p_Sector_id`,
                 `p_farm_id`,
                 `p_last_produce`,
                 `p_next_crop`,
                 `p_supplements`,
                 `p_water_avail`
                 );
            END IF;
         END$$
  DELIMITER ;
------------------------------------------------------------------------------------------------------------

//View Farm
DELIMITER $$
USE `BucketList`$$
CREATE PROCEDURE `sp_viewFarm` ()
BEGIN
    select * from Farm;
END$$

DELIMITER ;
------------------------------------------------------------------------------------------------------------
//ABOVE AVG water
DELIMITER $$
USE `BucketList`$$
CREATE PROCEDURE `sp_AAW` ()
BEGIN
select Sector_id,farm_id,water_avail
from Farm
where water_avail >
(select avg(water_avail)
from Farm);
END$$

DELIMITER ;
--------------------------------------------------------------------------------------------------------------
//BELOW AVG water
DELIMITER $$
USE `BucketList`$$
CREATE PROCEDURE `sp_BAW` ()
BEGIN
select Sector_id,farm_id,water_avail
from Farm
where water_avail <
(select avg(water_avail)
from Farm);
END$$

DELIMITER ;

--------------------------------------------------------------------------------------------------------------

// Delete Farm
DELIMITER $$
 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_DelFarm`(
 IN P_Farm_ID)

 BEGIN
     if ( select exists (select 1 from Sector where Farm_id ! = P_Farm_ID) ) THEN

         select 'farm does not Exists !!';
    else
          delete
          from farm
          where farm_id = P_farm_ID
  END IF;
END$$
DELIMITER ;

-------------------------------------------------------------------------------------------------------------------

// update farm name
DELIMITER $$
 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_UpFarm`(
 IN P_farmID
 IN P_farmName)

 BEGIN
     if ( select exists (select 1 from Farm where Farm_id ! = P_FarmID) ) THEN

         select 'farm does not Exists !!';
    else
        update Farm
        set Farm_name = P_farmName
        where Farm_Id=P_farmId
  END IF;
END$$
DELIMITER ;
---------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
